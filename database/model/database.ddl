-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-11-05 10:52:00 CST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE applications (
    jobs_id  INTEGER NOT NULL,
    users_id INTEGER NOT NULL
);

CREATE TABLE categories (
    id     INTEGER NOT NULL,
    nombre VARCHAR2(50)
);

ALTER TABLE categories ADD CONSTRAINT categories_pk PRIMARY KEY ( id );

CREATE TABLE categories_relations (
    id             INTEGER,
    categories_id  INTEGER NOT NULL,
    categories_id1 INTEGER NOT NULL
);

CREATE TABLE chats (
    id        INTEGER NOT NULL,
    users_id  INTEGER NOT NULL,
    users_id1 INTEGER NOT NULL
);

ALTER TABLE chats ADD CONSTRAINT chats_pk PRIMARY KEY ( id );

CREATE TABLE comments (
    id          INTEGER NOT NULL,
    "comment"   VARCHAR2(300),
    users_id    INTEGER NOT NULL,
    posts_id    INTEGER NOT NULL,
    comments_id INTEGER NOT NULL
);

CREATE UNIQUE INDEX comments__idx ON
    comments (
        id
    ASC );

ALTER TABLE comments ADD CONSTRAINT comments_pk PRIMARY KEY ( id );

CREATE TABLE education (
    id        INTEGER NOT NULL,
    institute VARCHAR2(100),
    location  VARCHAR2(50),
    grade     VARCHAR2(50)
);

ALTER TABLE education ADD CONSTRAINT education_pk PRIMARY KEY ( id );

CREATE TABLE following (
    id     INTEGER NOT NULL,
    "from" INTEGER NOT NULL,
    "to"   INTEGER NOT NULL
);

CREATE UNIQUE INDEX following__idx ON
    following (
        id
    ASC );

CREATE UNIQUE INDEX following__idxv1 ON
    following (
        "from"
    ASC );

ALTER TABLE following ADD CONSTRAINT following_pk PRIMARY KEY ( id );

CREATE TABLE jobs (
    id          INTEGER NOT NULL,
    users_id    INTEGER NOT NULL,
    name        VARCHAR2(50),
    description VARCHAR2(255),
    category    VARCHAR2(50)
);

ALTER TABLE jobs ADD CONSTRAINT jobs_pk PRIMARY KEY ( id );

CREATE TABLE likes (
    id       INTEGER NOT NULL,
    users_id INTEGER NOT NULL,
    posts_id INTEGER NOT NULL
);

CREATE UNIQUE INDEX likes__idx ON
    likes (
        id
    ASC );

CREATE UNIQUE INDEX likes__idxv1 ON
    likes (
        posts_id
    ASC );

ALTER TABLE likes ADD CONSTRAINT likes_pk PRIMARY KEY ( id );

CREATE TABLE locations (
    id       INTEGER NOT NULL,
    location VARCHAR2(100)
);

ALTER TABLE locations ADD CONSTRAINT locations_pk PRIMARY KEY ( id );

CREATE TABLE messages (
    id       INTEGER NOT NULL,
    chats_id INTEGER NOT NULL,
    menssage VARCHAR2(300),
    users_id INTEGER NOT NULL,
    "date"   DATE
);

CREATE UNIQUE INDEX messages__idx ON
    messages (
        id
    ASC );

ALTER TABLE messages ADD CONSTRAINT messages_pk PRIMARY KEY ( id );

CREATE TABLE my_education (
    users_id     INTEGER NOT NULL,
    education_id INTEGER NOT NULL,
    start_date   DATE,
    finish_date  DATE
);

CREATE TABLE my_experience (
    users_id           INTEGER NOT NULL,
    work_experience_id INTEGER NOT NULL,
    start_date         DATE,
    finish_date        DATE
);

CREATE TABLE my_skills (
    users_id  INTEGER NOT NULL,
    skills_id INTEGER NOT NULL
);

CREATE TABLE notifications (
    id       INTEGER NOT NULL,
    content  VARCHAR2(100),
    posts_id INTEGER NOT NULL
);

ALTER TABLE notifications ADD CONSTRAINT notifications_pk PRIMARY KEY ( id );

CREATE TABLE notifications_report (
    notifications_id INTEGER NOT NULL,
    isseen           CHAR(1),
    users_id         INTEGER NOT NULL
);

ALTER TABLE notifications_report ADD CONSTRAINT notifications_report_pk PRIMARY KEY ( notifications_id );

CREATE TABLE posts (
    id          INTEGER NOT NULL,
    content     VARCHAR2(300),
    media       VARCHAR2(300),
    type        VARCHAR2(20),
    "date"      DATE,
    users_id    INTEGER NOT NULL,
    users_email INTEGER NOT NULL
);

ALTER TABLE posts ADD CONSTRAINT posts_pk PRIMARY KEY ( id );

CREATE TABLE skills (
    id   INTEGER NOT NULL,
    name VARCHAR2(50)
);

ALTER TABLE skills ADD CONSTRAINT skills_pk PRIMARY KEY ( id );

CREATE TABLE users (
    id            INTEGER NOT NULL,
    name          VARCHAR2(50),
    photo         VARCHAR2(400),
    email         VARCHAR2(100),
    password      VARCHAR2(30),
    info          VARCHAR2(300),
    banner        VARCHAR2(200),
    categories_id INTEGER,
    locations_id  INTEGER
);

ALTER TABLE users ADD CONSTRAINT users_pk PRIMARY KEY ( id );

ALTER TABLE users ADD CONSTRAINT users_email_unv1 UNIQUE ( email );

ALTER TABLE users ADD CONSTRAINT users_email_un UNIQUE ( email );

CREATE TABLE work_experience (
    id           INTEGER NOT NULL,
    company_name VARCHAR2(50) NOT NULL,
    location     VARCHAR2(50),
    occupation   VARCHAR2(50)
);

ALTER TABLE work_experience ADD CONSTRAINT work_experience_pk PRIMARY KEY ( id );

ALTER TABLE applications
    ADD CONSTRAINT applications_jobs_fk FOREIGN KEY ( jobs_id )
        REFERENCES jobs ( id );

ALTER TABLE applications
    ADD CONSTRAINT applications_users_fk FOREIGN KEY ( users_id )
        REFERENCES users ( id );

ALTER TABLE categories_relations
    ADD CONSTRAINT categories_fk FOREIGN KEY ( categories_id )
        REFERENCES categories ( id );

ALTER TABLE categories_relations
    ADD CONSTRAINT categories_fkv2 FOREIGN KEY ( categories_id1 )
        REFERENCES categories ( id );

ALTER TABLE chats
    ADD CONSTRAINT chats_users_fk FOREIGN KEY ( users_id )
        REFERENCES users ( id );

ALTER TABLE chats
    ADD CONSTRAINT chats_users_fkv2 FOREIGN KEY ( users_id1 )
        REFERENCES users ( id );

ALTER TABLE comments
    ADD CONSTRAINT comments_comments_fk FOREIGN KEY ( comments_id )
        REFERENCES comments ( id );

ALTER TABLE comments
    ADD CONSTRAINT comments_posts_fk FOREIGN KEY ( posts_id )
        REFERENCES posts ( id );

ALTER TABLE comments
    ADD CONSTRAINT comments_users_fk FOREIGN KEY ( users_id )
        REFERENCES users ( id );

ALTER TABLE following
    ADD CONSTRAINT following_users_fk FOREIGN KEY ( "from" )
        REFERENCES users ( id );

ALTER TABLE following
    ADD CONSTRAINT following_users_fkv1 FOREIGN KEY ( "to" )
        REFERENCES users ( id );

ALTER TABLE jobs
    ADD CONSTRAINT jobs_users_fk FOREIGN KEY ( users_id )
        REFERENCES users ( id );

ALTER TABLE likes
    ADD CONSTRAINT likes_posts_fk FOREIGN KEY ( posts_id )
        REFERENCES posts ( id );

ALTER TABLE likes
    ADD CONSTRAINT likes_users_fk FOREIGN KEY ( users_id )
        REFERENCES users ( id );

ALTER TABLE messages
    ADD CONSTRAINT messages_chats_fk FOREIGN KEY ( chats_id )
        REFERENCES chats ( id );

ALTER TABLE messages
    ADD CONSTRAINT messages_users_fk FOREIGN KEY ( users_id )
        REFERENCES users ( id );

ALTER TABLE my_education
    ADD CONSTRAINT my_education_education_fk FOREIGN KEY ( education_id )
        REFERENCES education ( id );

ALTER TABLE my_education
    ADD CONSTRAINT my_education_users_fk FOREIGN KEY ( users_id )
        REFERENCES users ( id );

ALTER TABLE my_experience
    ADD CONSTRAINT my_experience_fk FOREIGN KEY ( work_experience_id )
        REFERENCES work_experience ( id );

ALTER TABLE my_experience
    ADD CONSTRAINT my_experience_users_fk FOREIGN KEY ( users_id )
        REFERENCES users ( id );

ALTER TABLE my_skills
    ADD CONSTRAINT my_skills_skills_fk FOREIGN KEY ( skills_id )
        REFERENCES skills ( id );

ALTER TABLE my_skills
    ADD CONSTRAINT my_skills_users_fk FOREIGN KEY ( users_id )
        REFERENCES users ( id );

ALTER TABLE notifications
    ADD CONSTRAINT notifications_posts_fk FOREIGN KEY ( posts_id )
        REFERENCES posts ( id );

ALTER TABLE notifications_report
    ADD CONSTRAINT notifications_report_fk FOREIGN KEY ( notifications_id )
        REFERENCES notifications ( id );

ALTER TABLE notifications_report
    ADD CONSTRAINT notifications_report_users_fk FOREIGN KEY ( users_id )
        REFERENCES users ( id );

ALTER TABLE posts
    ADD CONSTRAINT posts_users_fk FOREIGN KEY ( users_email )
        REFERENCES users ( id );

ALTER TABLE users
    ADD CONSTRAINT users_categories_fk FOREIGN KEY ( categories_id )
        REFERENCES categories ( id );

ALTER TABLE users
    ADD CONSTRAINT users_locations_fk FOREIGN KEY ( locations_id )
        REFERENCES locations ( id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            20
-- CREATE INDEX                             6
-- ALTER TABLE                             45
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
